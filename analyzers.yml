sources:
  # Each entry specifies a source that should be considered untrusted
  # If the package already exists in the sources section, add the variable/function/type underneath 
  # Each package can contain multiple vulnerable sources.
  sources:
    # Sources that are defined in Go documentation as a "variable" go here (note: these variables will have an SSA type of "Global").
    variables:
      "os":
        - "Args"
    # Sources that are defined in Go documentation as a "function" go here.
    functions:
      "flag":
        - "Arg"
        - "Args"
      "os":
        - "Environ"
        - "File"
        - "FileInfo"
        - "FileMode"
        - "Readdir"
        - "Readdirnames"
        - "OpenFile"
      "crypto/tls":
        - "LoadX509KeyPair"
        - "X509KeyPair"
      "os/user":
        - "Lookup"
        - "LookupId"
        - "Current"
      "crypto/x509":
        - "Subjects"
      "io":
        - "ReadAtLeast"
        - "ReadFull"
      "database/sql":
        - "Query"
        - "QueryRow"
      "bytes":
        - "String"
        - "ReadBytes"
        - "ReadByte"
      "bufio":
        - "Text"
        - "Bytes"
        - "ReadString"
        - "ReadSlice"
        - "ReadRune"
        - "ReadLine"
        - "ReadBytes"
        - "ReadByte"
      "archive/tar":
        - "Next"
        - "FileInfo"
        - "Header"
      "net/url":
        - "ParseQuery"
        - "ParseUriRequest"
        - "Parse"
        - "Query"
    # Sources that are defined in Go documentation as a "type" go here (note: adding types will consider all functions that use that type to be tainted).
    types:
      "net/http":
        - "Request"
