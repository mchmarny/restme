name: Image on Tag

on:  
  push:
    tags:
      - 'v*'
  
jobs:

  build:
    runs-on: ubuntu-latest
    steps:

    - name: Setup
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16

    - name: Checkout
      uses: actions/checkout@v2

    - name: Tidy
      run: |
        make tidy

    - name: Lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.38
        args: --config .golangci.yaml --timeout 3m

    - name: Test
      run: |
        make test

    - name: Variables
      run: |
        echo "RELEASE_VERSION=$(make version)" >> $GITHUB_ENV
        
    - name: Ko
      uses: imjasonh/setup-ko@v0.4

    - name: Publish 
      run: |
        KO_DOCKER_REPO=ghcr.io/$GITHUB_REPOSITORY \
        GOFLAGS="-ldflags=-X=main.version=${{ env.RELEASE_VERSION }}" \
          ko publish ./cmd/ --bare --tags ${{ env.RELEASE_VERSION }},latest

    - name: Cluster
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: v0.10.0
        wait: "600s"
        config: configs/ci-cluster.yaml

    - name: Verify
      run: |
        kubectl cluster-info
        echo "current-context:" $(kubectl config current-context)
        kubectl get pods -n kube-system
        sleep 5
        for pod in $(kubectl get pods --no-headers -n kube-system -o custom-columns=":metadata.name"); do \
          kubectl wait --for=condition=ready pod/$pod --timeout=300s -n kube-system; done

    - name: Deploy
      run: |
        echo "current-context:" $(kubectl config current-context)
        sed "s|IMAGE_URI|ghcr.io/$GITHUB_REPOSITORY:${{ env.RELEASE_VERSION }}|g" \
          deployments/ci-template.yaml > deployments/ci-test.yaml
        cat deployments/ci-test.yaml
        kubectl apply -f deployments/ci-test.yaml
        kubectl rollout status deployment/rester
        kubectl get pods
        kubectl get services
        echo "SERVICE_IP=$(kubectl get service/rester -o jsonpath='{.spec.clusterIP}')" >> $GITHUB_ENV

    - name: Query
      run: |
        echo "Service IP: ${{ env.SERVICE_IP }}"
        curl -i -H "Content-Type: application/json" \
          http://${{ env.SERVICE_IP }}/v1/request