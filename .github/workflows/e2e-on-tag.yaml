name: E2E Test

on:  
  push:
    tags:
      - 'v*'
  
jobs:

  e2e-test:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.17

    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Tidy Modules
      run: |
        make tidy

    - name: Config Lint
      id: golangci_config
      uses: andstor/file-existence-action@v1
      with:
        files: .golangci.yaml

    - name: Lint Code
      if: steps.golangci_config.outputs.files_exists == 'true'
      uses: golangci/golangci-lint-action@v2
      with:
        version: latest
        args: --timeout 3m

    - name: Test Code
      run: |
        make test

    - name: Capture Version
      run: |
        echo "RELEASE_VERSION=$(make version)" >> $GITHUB_ENV

    - name: Install cosign
      uses: sigstore/cosign-installer@main
      with:
        cosign-release: 'v1.3.1'

    - name: Install Ko
      uses: imjasonh/setup-ko@v0.4

    - id: auth
      name: Get GCP token
      uses: google-github-actions/auth@v0.4.0
      with:
          create_credentials_file: true
          workload_identity_provider: $WORKLOAD_IDENTITY_PROVIDER
          service_account: $SERVICE_ACCOUNT

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.3.0


    - name: Auth to GCP
      run: |-
        gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
        

    - name: Publish Image
      run: |
        gcloud builds submit \
          --project $PROJECT_ID \
          --tag "gcr.io/${PROJECT_ID}/restme:${{ env.RELEASE_VERSION }}"

